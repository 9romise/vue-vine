diff --git a/lib/codegen/template/context.js b/lib/codegen/template/context.js
index bdae8e6bdd6853fb0cce9ad0f417fb01313a1dd1..542e5cedd91fddfffcad08fa21e377d8dd391cd2 100644
--- a/lib/codegen/template/context.js
+++ b/lib/codegen/template/context.js
@@ -184,7 +184,7 @@ function createTemplateCodegenContext(scriptSetupBindingNames) {
                             varName,
                             'template',
                             offset,
-                            codeFeatures.additionalCompletion,
+                            codeFeatures.navigationAndAdditionalCompletion,
                         ];
                     }
                     yield `,`;
diff --git a/lib/codegen/template/element.js b/lib/codegen/template/element.js
index b208961a53e8118c8ad77b69e4fe8d461511ad0e..a4316182569643a590966ba8487f969f7fe05ab5 100644
--- a/lib/codegen/template/element.js
+++ b/lib/codegen/template/element.js
@@ -126,10 +126,8 @@ function* generateComponent(options, ctx, node, currentComponent, componentCtxVa
             yield `[`;
             for (const tagOffset of tagOffsets) {
                 yield* (0, camelized_1.generateCamelized)((0, shared_1.capitalize)(node.tag), tagOffset, {
-                    completion: {
-                        isAdditional: true,
-                        onlyImport: true,
-                    },
+                    navigation: true,
+                    completion: true,
                 });
                 yield `,`;
             }
diff --git a/lib/codegen/template/elementProps.js b/lib/codegen/template/elementProps.js
index bedc7f6692cdf6052947fbe4f2761f2aa2481689..b328195634193641982c7a80210832ab37dc9b66 100644
--- a/lib/codegen/template/elementProps.js
+++ b/lib/codegen/template/elementProps.js
@@ -78,7 +78,7 @@ function* generateElementProps(options, ctx, node, props, enableCodeFeatures, pr
             }
             const codes = (0, common_1.wrapWith)(prop.loc.start.offset, prop.loc.end.offset, ctx.codeFeatures.verification, ...(prop.arg
                 ? (0, objectProperty_1.generateObjectProperty)(options, ctx, propName, prop.arg.loc.start.offset, {
-                    ...ctx.codeFeatures.withoutHighlightAndCompletion,
+                    ...ctx.codeFeatures.withoutHighlight,
                     navigation: ctx.codeFeatures.withoutHighlightAndCompletion.navigation
                         ? {
                             resolveRenameNewName: shared_1.camelize,
